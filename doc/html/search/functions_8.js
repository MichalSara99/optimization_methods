var searchData=
[
  ['minimize_182',['minimize',['../classom__unconstrained__methods_1_1om__conjugate__gradient_1_1fletcher__reeves__method.html#aa76c2a3eaf539df7a004683012b77357',1,'om_unconstrained_methods::om_conjugate_gradient::fletcher_reeves_method::minimize()'],['../classom__unconstrained__methods_1_1om__conjugate__gradient_1_1hestenes__stiefel__method.html#a96289885fc5bcf93fcaf7654c5a0c79e',1,'om_unconstrained_methods::om_conjugate_gradient::hestenes_stiefel_method::minimize()'],['../classom__unconstrained__methods_1_1om__conjugate__gradient_1_1polak__ribiere__method.html#a079c113545d13cdaf89bedc7bde3a950',1,'om_unconstrained_methods::om_conjugate_gradient::polak_ribiere_method::minimize()'],['../classom__unconstrained__methods_1_1om__quasi__newton_1_1broyden__fletcher__goldfarb__shanno__method.html#a93ddb14e3314dc5b4ef1cf9581194660',1,'om_unconstrained_methods::om_quasi_newton::broyden_fletcher_goldfarb_shanno_method::minimize()'],['../classom__unconstrained__methods_1_1om__quasi__newton_1_1davidon__fletcher__powell__method.html#afdaeb441b58fcb0cef5768345579c9a0',1,'om_unconstrained_methods::om_quasi_newton::davidon_fletcher_powell_method::minimize()'],['../classom__unconstrained__methods_1_1om__steepest__descent_1_1steepest__descent__method.html#ab61eb9034536203c65236c24f008bafa',1,'om_unconstrained_methods::om_steepest_descent::steepest_descent_method::minimize()'],['../classom__unconstrained__methods_1_1om__zero__order_1_1nelder__mead__method.html#a3801f2872ff1137f7db71c9be1fe8cf7',1,'om_unconstrained_methods::om_zero_order::nelder_mead_method::minimize()'],['../classom__unconstrained__methods_1_1om__zero__order_1_1powell__conjugate__method.html#a42eb3bb9a3ddddf43048afc6bf1c5412',1,'om_unconstrained_methods::om_zero_order::powell_conjugate_method::minimize()'],['../namespaceom__unconstrained__methods.html#adf3b1cb4817d0093a50ee9c5526a1775',1,'om_unconstrained_methods::minimize(f_scalar_t&lt; fp_type &gt; &amp;&amp;objective, range&lt; fp_type &gt; const &amp;range, fp_type tolerance, std::size_t const &amp;max_iters)'],['../namespaceom__unconstrained__methods.html#ab9c24dfdc5e6a4127733958707007074',1,'om_unconstrained_methods::minimize(f_vector_t&lt; fp_type &gt; &amp;&amp;objective, vector_arg_t&lt; fp_type &gt; const &amp;init_guess, std::size_t const &amp;max_iters, fp_type arg_tol=1e-4, fp_type grad_tol=1e-4, fp_type fun_tol=1e-4, range&lt; fp_type &gt; const &amp;line_search_range=range&lt; fp_type &gt;(-1.0, 1.0))']]]
];
